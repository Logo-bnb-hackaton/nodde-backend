service: nodde-backend

custom:
  stage: ${opt:stage, 'offline'}
  region: ${opt:region, 'us-east-1'}
  esbuild:
    platform: "node"
    target: node16
    sourcemap: linked
  serverless-offline:
    httpPort: 4000
    noPrependStageInUrl: true
    reloadHandler: true

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${self:custom.stage}
  region: ${self:custom.region}
  logs:
    httpApi: true
  httpApi:
    cors: true  
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/Community-profile"
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
        - s3:DeleteObject
      Resource: "arn:aws:s3:::community-profile-images-1r34goy/*"
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/Community-subscription"
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
        - s3:DeleteObject
      Resource: "arn:aws:s3:::community-subscription-images-321t9587g/*"
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/auth-nonce"  

functions:
  app:
    handler: src/handler.handler
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors: true

plugins:
  - serverless-dotenv-plugin
  - serverless-esbuild
  - serverless-offline          